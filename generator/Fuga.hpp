///
/// This source code automatically generated by nanojson generator.
/// DO NOT edit direcly!
///
/// created at: 2015-09-22 02:29:45.235488
/// commit hash: b5bdf59e3eb144386a5965d169a625cfde23403b
///

#pragma once

#ifndef __HEADER_NANOJSON_HOGE_FUGA_PERSON__
#define __HEADER_NANOJSON_HOGE_FUGA_PERSON__

#include <string>


namespace hoge { namespace fuga { 

struct Person
{
    int a;
    double b;
    std::string c = "hogehoge";

private:
    friend class nanojson::detail::json_traits<Person>;

    void assign(nanojson::value const& src)
    {
        nanojson::object obj = src.get<nanojson::object>();
        Person dst;
        dst.a = *nanojson::get<decltype(dst.a)>(obj.at("a"));
        dst.b = *nanojson::get<decltype(dst.b)>(obj.at("tag1"));
        dst.c = *nanojson::get<decltype(dst.c)>(obj.at("c"));
        *this = std::move(dst);
    }

    nanojson::value as_json() const
    {
        nanojson::object dst;
        dst["a"] = nanojson::make_value(a);
        dst["tag1"] = nanojson::make_value(b);
        dst["c"] = nanojson::make_value(c);
        return nanojson::value(std::move(dst));
    }
};

} } // namespace hoge::fuga;

#endif
